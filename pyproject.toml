[project]
name = "sysforge"
version = "0.0.0"
description = "Modern Python toolkit for Linux system administration and automation"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
  {name = "System Tools Team", email = "team@sysforge.local"},
]
classifiers = [
  "Development Status :: 3 - Alpha",
]

dependencies = [
"typer >=0.9.0",
"rich >=13.0.0",
"psutil >=5.9.0",
"pydantic >=2.0.0",
"pydantic-settings >=2.0.0",
"zstandard >=0.20.0",
"lz4 >=3.1.0",
"gitpython >=3.1.0",
"platformdirs >=3.0.0",
"pyyaml >=6.0",
]


[project.urls]
Homepage = "https://github.com/bosd/sysforge"
Repository = "https://github.com/bosd/sysforge"
Documentation = "https://sysforge.readthedocs.io"
Changelog = "https://github.com/bosd/sysforge/releases"

[dependency-groups]
dev = [
  "coverage[toml] >= 6.2",
  "pre-commit >=2.16.0",
  "pre-commit-hooks >=4.6.0",
  "pytest >=6.2.5",
  "pytest-cov >=4.0.0",
  "pygments >=2.10.0",
  "ruff>=0.12.12",
  "mypy>=1.17.1",
  "types-psutil>=7.0.0.20250822",
  "nox>=2025.5.1",
  "types-pyyaml>=6.0.12.20250915",
]
lint = [
  "ruff >=0.5.5",
  "pydoclint >=0.5.0",
]
docs = [
  "furo >=2021.11.12",
  "myst-parser == 3.0.1",
  "sphinx >= 4.3.2",
  "sphinx-autobuild >=2021.3.14",
  "sphinx-click >=3.0.2",
]
mypy = [
  "mypy >=0.930"
]
typeguard = [
  "typeguard >=2.13.3"
]
xdoctest = [
  "xdoctest[colors] >=0.15.10"
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.uv]
package = true

[project.scripts]
sysforge = "sysforge.__main__:cli"

[build-system]
# When using mypyc, you must list all dependencies used by the compiled
# modules here. Otherwise, mypyc will not be able to see the types of the
# dependencies, and the compilation will fail.
requires = [
    "setuptools>=61.0",
    "mypy>=1.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "psutil>=5.9.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "zstandard>=0.20.0",
    "lz4>=3.1.0",
    "gitpython>=3.1.0",
    "platformdirs>=3.0.0",
    "pyyaml>=6.0",
    "types-psutil>=7.0.0.20250822",
    "types-pyyaml",
]
build-backend = "setuptools.build_meta"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["sysforge", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 100
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
]

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_context = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false

[tool.ruff]
src = ["src", "tests"]

[tool.ruff.lint]
select = [
  "B",    # flake8-bugbear
  "C90",  # mccabe
  "D",    # pydocstyle
  "E",    # pycodestyle
  "F",    # pyflakes
  "I",    # isort
  "N",    # pep8-naming
  "RUF",  # Ruff-specific rules
  "S",    # flake8-bandit
  "UP",   # pyupgrade
  "W",    # pycodestyle
]
ignore = [
  "COM812",
  "COM819",
  "D107",  # undocumented-public-init conflicts with DOC301
  "D206",
  "D300",
  "E111",
  "E114",
  "E117",
  "ISC001",
  "ISC002",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "W191",
  "S110",  # try-except-pass is acceptable for filters
  "S603",  # subprocess with known safe commands
]

[tool.ruff.lint.per-file-ignores]
"*/test_*.py" = ["S101"]
"noxfile.py" = ["S101"]
"**/conftest.py" = ["S101"]
"**/cli.py" = ["B008"]
"**/compression.py" = ["S202"]

[tool.ruff.lint.mccabe]
max-complexity = 20

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pydoclint]
style = 'google'
exclude = '\.git|\.nox|noxfile.py'
arg-type-hints-in-docstring = false
